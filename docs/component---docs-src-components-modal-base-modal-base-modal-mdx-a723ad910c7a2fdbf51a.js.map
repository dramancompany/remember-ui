{"version":3,"sources":["webpack:///../docsSrc/components/Modal/BaseModal/BaseModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","BaseModal","__position","__code","__scope","Playground","Props","Container","BaseButton","React","isOpen","setIsOpen","fill","width","size","onClick","style","backgroundColor","height","display","alignItems","justifyContent","flexDirection","color","isMDXComponent"],"mappings":"qiBAUO,IAAMA,EAAe,Q,kOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAWF,QAAQ,UAC9B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mzBAAs0BC,SAAO,GAC92BN,QACAH,kBACAU,eACAC,UACAL,cACAM,cACAC,gBAP82B,gBAQ92Bb,IAR82B,EAS92BH,eAT82B,GAU72BO,QAAQ,eACZ,WAAM,MAC2BU,YAAe,GAApCC,EADN,KACcC,EADd,KAED,OAAO,YAAC,IAAD,CAAWZ,QAAQ,aAC1B,YAAC,IAAD,CAAYa,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMJ,GAAU,IAAOZ,QAAQ,cAApF,cACA,YAAC,IAAD,CAAWW,OAAQA,EAAQX,QAAQ,aACjC,mBAAKiB,MAAO,CACRC,gBAAiB,OACjBJ,MAAO,OACPK,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,WAEjB,yCACA,YAAC,IAAD,CAAYV,MAAI,EAACW,MAAO,OAAQR,QAAS,kBAAMJ,GAAU,IAAQZ,QAAQ,cAAzE,2B,gOAUZH,EAAW4B,gBAAiB","file":"component---docs-src-components-modal-base-modal-base-modal-mdx-a723ad910c7a2fdbf51a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/myoungho.pak/workspace/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { BaseModal } from './BaseModal';\nimport { Container } from '../../Container/Container';\nimport { BaseButton } from '../../Button/BaseButton/BaseButton';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"basemodal\"\n    }}>{`BaseModal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={BaseModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen, setIsOpen] = React.useState(false)\\n  return (\\n    <Container>\\n      <BaseButton\\n        fill\\n        width={150}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen(true)}\\n      >\\n        Open Modal\\n      </BaseButton>\\n      <BaseModal isOpen={isOpen}>\\n        <div\\n          style={{\\n            backgroundColor: \\'#fff\\',\\n            width: \\'50vw\\',\\n            height: \\'50vh\\',\\n            display: \\'flex\\',\\n            alignItems: \\'center\\',\\n            justifyContent: \\'center\\',\\n            flexDirection: \\'column\\',\\n          }}\\n        >\\n          <span>Modal is Open</span>\\n          <BaseButton fill color={\\'gray\\'} onClick={() => setIsOpen(false)}>\\n            Close Modal\\n          </BaseButton>\\n        </div>\\n      </BaseModal>\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BaseModal,\n      Container,\n      BaseButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen, setIsOpen] = React.useState(false);\n        return <Container mdxType=\"Container\">\n        <BaseButton fill width={150} size={\"large\"} onClick={() => setIsOpen(true)} mdxType=\"BaseButton\">Open Modal</BaseButton>\n        <BaseModal isOpen={isOpen} mdxType=\"BaseModal\">\n          <div style={{\n              backgroundColor: \"#fff\",\n              width: \"50vw\",\n              height: \"50vh\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              flexDirection: \"column\"\n            }}>\n            <span>Modal is Open</span>\n            <BaseButton fill color={\"gray\"} onClick={() => setIsOpen(false)} mdxType=\"BaseButton\">Close Modal</BaseButton>\n          </div>\n        </BaseModal>\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}