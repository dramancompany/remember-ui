{"version":3,"sources":["webpack:///../docsSrc/components/Modal/MessageModal/MessageModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","MessageModal","__position","__code","__scope","Playground","Props","Container","BaseButton","Radio","BaseInput","Textarea","DoczContainer","React","isOpen1","setIsOpen1","isOpen2","setIsOpen2","radioId","setRadioId","setRadio","id","fill","width","size","onClick","isOpen","onConfirm","alert","onClose","direction","isChecked","isMDXComponent"],"mappings":"qlBAcO,IAAMA,EAAe,Q,wOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAcF,QAAQ,UACjC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,2xDAAoyDC,SAAO,GAC50DN,QACAH,kBACAU,eACAC,UACAL,iBACAM,cACAC,eACAC,UACAC,cACAC,aACAC,mBAX40D,gBAY50DjB,IAZ40D,EAa50DH,eAb40D,GAc30DO,QAAQ,eACZ,WAAM,MAC6Bc,YAAe,GAAtCC,EADN,KACeC,EADf,OAE6BF,YAAe,GAAtCG,EAFN,KAEeC,EAFf,OAGuCJ,YAAe,GAHtD,aAI6BA,WAAe,IAAtCK,EAJN,KAIeC,EAJf,KAMKC,EAAW,SAAAC,GAAE,OAAIF,EAAWE,IANjC,EAQiCR,WAAe,IARhD,UAcD,OAAO,YAAC,IAAD,CAAWd,QAAQ,aAC1B,YAAC,IAAD,CAAYuB,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMV,GAAW,IAAOhB,QAAQ,cAArF,uBAGA,YAAC,IAAD,CAAYuB,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMR,GAAW,IAAOlB,QAAQ,cAArF,uBAGA,YAAC,IAAD,CAAc2B,OAAQZ,EAASa,UAAW,WAVxCC,MAAM,UAUwDC,QAAS,kBAAMd,GAAW,IAAQhB,QAAQ,gBACxG,YAAC,IAAD,CAAe+B,UAAU,MAAM/B,QAAQ,iBACrC,yCAEF,YAAC,IAAD,CAAe+B,UAAU,MAAM/B,QAAQ,iBACrC,YAAC,IAAD,CAAOgC,UAAuB,IAAZb,EAAeO,QAAS,kBAAML,EAAS,IAAIrB,QAAQ,UACrE,+BACA,YAAC,IAAD,CAAOgC,UAAuB,IAAZb,EAAeO,QAAS,kBAAML,EAAS,IAAIrB,QAAQ,UACrE,iCAGJ,YAAC,IAAD,CAAc2B,OAAQV,EAASa,QAAS,kBAAMZ,GAAW,IAAQlB,QAAQ,gBACvE,YAAC,IAAD,CAAe+B,UAAU,MAAM/B,QAAQ,iBACrC,qCAEF,YAAC,IAAD,CAAe+B,UAAU,MAAM/B,QAAQ,iBACrC,YAAC,IAAD,CAAOgC,UAAuB,IAAZb,EAAeO,QAAS,kBAAML,EAAS,IAAIrB,QAAQ,UACrE,+BACA,YAAC,IAAD,CAAOgC,UAAuB,IAAZb,EAAeO,QAAS,kBAAML,EAAS,IAAIrB,QAAQ,UACrE,2C,sOAUZH,EAAWoC,gBAAiB","file":"component---docs-src-components-modal-message-modal-message-modal-mdx-c30d43e6a1ef4a1841d4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jongtaek.oh/Desktop/dev/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MessageModal } from './MessageModal';\nimport { Container } from '../../Container/Container';\nimport { BaseButton } from '../../Button/BaseButton/BaseButton';\nimport { Radio } from '../../Control/Radio/Radio';\nimport { BaseInput } from '../../Input/BaseInput/BaseInput';\nimport { Textarea } from '../../Input/Textarea/Textarea';\nimport { DoczContainer } from 'remember-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"messagemodal\"\n    }}>{`MessageModal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MessageModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen1, setIsOpen1] = React.useState(false)\\n  const [isOpen2, setIsOpen2] = React.useState(false)\\n  const [isProcessing, setIsProcessing] = React.useState(false)\\n  const [radioId, setRadioId] = React.useState(1)\\n  const setRadio = id => setRadioId(id)\\n  const [buyerName, setBuyerName] = React.useState(\\'\\')\\n  const handleSubmit = () => {\\n    alert(\\'보냈습니다\\')\\n  }\\n  return (\\n    <Container>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen1(true)}\\n      >\\n        Open Message Modal1\\n      </BaseButton>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen2(true)}\\n      >\\n        Open Message Modal2\\n      </BaseButton>\\n      <MessageModal\\n        isOpen={isOpen1}\\n        onConfirm={() => handleSubmit()}\\n        onClose={() => setIsOpen1(false)}\\n      >\\n        <DoczContainer direction=\\\"row\\\">\\n          <div>취소랑 확인이 있는 모달</div>\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </DoczContainer>\\n      </MessageModal>\\n      <MessageModal isOpen={isOpen2} onClose={() => setIsOpen2(false)}>\\n        <DoczContainer direction=\\\"row\\\">\\n          <div>확인만 있는 모달</div>\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </DoczContainer>\\n      </MessageModal>\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MessageModal,\n      Container,\n      BaseButton,\n      Radio,\n      BaseInput,\n      Textarea,\n      DoczContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen1, setIsOpen1] = React.useState(false);\n        const [isOpen2, setIsOpen2] = React.useState(false);\n        const [isProcessing, setIsProcessing] = React.useState(false);\n        const [radioId, setRadioId] = React.useState(1);\n\n        const setRadio = id => setRadioId(id);\n\n        const [buyerName, setBuyerName] = React.useState('');\n\n        const handleSubmit = () => {\n          alert('보냈습니다');\n        };\n\n        return <Container mdxType=\"Container\">\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen1(true)} mdxType=\"BaseButton\">\n          Open Message Modal1\n        </BaseButton>\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen2(true)} mdxType=\"BaseButton\">\n          Open Message Modal2\n        </BaseButton>\n        <MessageModal isOpen={isOpen1} onConfirm={() => handleSubmit()} onClose={() => setIsOpen1(false)} mdxType=\"MessageModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <div>취소랑 확인이 있는 모달</div>\n          </DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" />\n            <span>옵션1</span>\n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" />\n            <span>옵션2</span>\n          </DoczContainer>\n        </MessageModal>\n        <MessageModal isOpen={isOpen2} onClose={() => setIsOpen2(false)} mdxType=\"MessageModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <div>확인만 있는 모달</div>\n          </DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" />\n            <span>옵션1</span>\n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" />\n            <span>옵션2</span>\n          </DoczContainer>\n        </MessageModal>\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}