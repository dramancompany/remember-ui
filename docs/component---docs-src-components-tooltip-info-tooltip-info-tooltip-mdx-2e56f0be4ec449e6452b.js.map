{"version":3,"sources":["webpack:///../docsSrc/components/Tooltip/InfoTooltip/InfoTooltip.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","InfoTooltip","__position","__code","__scope","useState","Playground","Props","DoczContainer","visible","setVisible","content","onClick","isMDXComponent"],"mappings":"yhBAUO,IAAMA,EAAe,Q,wOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAaF,QAAQ,UAChC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oWAAqWC,SAAO,GAC7YN,QACAH,kBACAU,oBACAC,eACAC,UACAN,gBACAO,mBAP6Y,gBAQ7Yb,IAR6Y,EAS7YH,eAT6Y,GAU5YO,QAAQ,eACZ,WAAM,MAC6BM,oBAAS,GAAhCI,EADN,KACeC,EADf,KAOD,OAAO,YAAC,IAAD,CAAeX,QAAQ,iBAC9B,kCACA,YAAC,IAAD,CAAaU,QAASA,EAASE,QAAS,mDAAsCC,QANvD,WACrBF,GAAW,IAK0FX,QAAQ,0B,sOAQvHH,EAAWiB,gBAAiB","file":"component---docs-src-components-tooltip-info-tooltip-info-tooltip-mdx-2e56f0be4ec449e6452b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/myoungho.pak/workspace/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground, Props } from 'docz';\nimport { InfoTooltip } from './InfoTooltip';\nimport { DoczContainer } from 'remember-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"infotooltip\"\n    }}>{`InfoTooltip`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={InfoTooltip} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [visible, setVisible] = useState(true)\\n  const onClickToolTip = () => {\\n    setVisible(false)\\n  }\\n  return (\\n    <DoczContainer>\\n      <div>ToolTip</div>\\n      <InfoTooltip\\n        visible={visible}\\n        content={<span>툴팁을 클릭하면, 다시 보지 않게 됩니다.</span>}\\n        onClick={onClickToolTip}\\n      />\\n    </DoczContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      Props,\n      InfoTooltip,\n      DoczContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [visible, setVisible] = useState(true);\n\n        const onClickToolTip = () => {\n          setVisible(false);\n        };\n\n        return <DoczContainer mdxType=\"DoczContainer\">\n        <div>ToolTip</div>\n        <InfoTooltip visible={visible} content={<span>툴팁을 클릭하면, 다시 보지 않게 됩니다.</span>} onClick={onClickToolTip} mdxType=\"InfoTooltip\" />\n      </DoczContainer>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}