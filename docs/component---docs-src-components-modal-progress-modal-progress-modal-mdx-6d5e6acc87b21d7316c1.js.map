{"version":3,"sources":["webpack:///../docsSrc/components/Modal/ProgressModal/ProgressModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","ProgressModal","__position","__code","__scope","Playground","Props","Container","BaseButton","React","isOpen","setIsOpen","currentCount","setCurrentCount","fill","width","size","onClick","interval","setInterval","prev","setTimeout","clearInterval","totalCount","title","message","isMDXComponent"],"mappings":"qiBAUO,IAAMA,EAAe,Q,0OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAeF,QAAQ,UAClC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,i1BAAo1BC,SAAO,GAC53BN,QACAH,kBACAU,eACAC,UACAL,kBACAM,cACAC,gBAP43B,gBAQ53Bb,IAR43B,EAS53BH,eAT43B,GAU33BO,QAAQ,eACZ,WAAM,MAC2BU,YAAe,GAApCC,EADN,KACcC,EADd,OAEuCF,WAAe,GAAhDG,EAFN,KAEoBC,EAFpB,KAgBD,OAAO,YAAC,IAAD,CAAWd,QAAQ,aAC1B,YAAC,IAAD,CAAYe,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAb1B,WAChBN,GAAU,GACV,IAAMO,EAAWC,aAAY,WAC3BN,GAAgB,SAAAO,GAAI,OAAIA,EAAO,OAC9B,KACHC,YAAW,WACTC,cAAcJ,GACdL,EAAgB,GAChBF,GAAU,KACT,OAI2DZ,QAAQ,cAAxE,uBACA,YAAC,IAAD,CAAeW,OAAQA,EAAQE,aAAcA,EAAcW,WAAY,EAAGC,MAAO,SAACZ,EAAcW,GAAf,OAAiCX,EAAjC,MAAmDW,EAAnD,gBAA6EE,QAAQ,2BAA2B1B,QAAQ,4B,wOAQjNH,EAAW8B,gBAAiB","file":"component---docs-src-components-modal-progress-modal-progress-modal-mdx-6d5e6acc87b21d7316c1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/myoungho.pak/workspace/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { ProgressModal } from './ProgressModal';\nimport { Container } from '../../Container/Container';\nimport { BaseButton } from '../../Button/BaseButton/BaseButton';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"progressmodal\"\n    }}>{`ProgressModal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ProgressModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen, setIsOpen] = React.useState(false)\\n  const [currentCount, setCurrentCount] = React.useState(1)\\n  const openModal = () => {\\n    setIsOpen(true)\\n    const interval = setInterval(() => {\\n      setCurrentCount(prev => prev + 1)\\n    }, 500)\\n    setTimeout(() => {\\n      clearInterval(interval)\\n      setCurrentCount(1)\\n      setIsOpen(false)\\n    }, 2500)\\n  }\\n  return (\\n    <Container>\\n      <BaseButton fill width={250} size={\\'large\\'} onClick={openModal}>\\n        Open Progress Modal\\n      </BaseButton>\\n      <ProgressModal\\n        isOpen={isOpen}\\n        currentCount={currentCount}\\n        totalCount={5}\\n        title={(currentCount, totalCount) =>\\n          `${currentCount} / ${totalCount}명에게 메시지 전송 중`\\n        }\\n        message=\\\"메시지 전송 중에 브라우저 창을 닫지 마세요\\\"\\n      />\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ProgressModal,\n      Container,\n      BaseButton,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen, setIsOpen] = React.useState(false);\n        const [currentCount, setCurrentCount] = React.useState(1);\n\n        const openModal = () => {\n          setIsOpen(true);\n          const interval = setInterval(() => {\n            setCurrentCount(prev => prev + 1);\n          }, 500);\n          setTimeout(() => {\n            clearInterval(interval);\n            setCurrentCount(1);\n            setIsOpen(false);\n          }, 2500);\n        };\n\n        return <Container mdxType=\"Container\">\n        <BaseButton fill width={250} size={\"large\"} onClick={openModal} mdxType=\"BaseButton\">Open Progress Modal</BaseButton>\n        <ProgressModal isOpen={isOpen} currentCount={currentCount} totalCount={5} title={(currentCount, totalCount) => `${currentCount} / ${totalCount}명에게 메시지 전송 중`} message=\"메시지 전송 중에 브라우저 창을 닫지 마세요\" mdxType=\"ProgressModal\" />\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}