{"version":3,"sources":["webpack:///../docsSrc/components/Modal/MobileFullModal/MobileFullModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","MobileFullModal","__position","__code","__scope","Playground","Props","Container","BaseButton","Radio","BaseInput","Textarea","DoczContainer","React","isOpen1","setIsOpen1","isOpen2","setIsOpen2","isProcessing","radioId","setRadioId","setRadio","id","buyerName","setBuyerName","fill","width","size","onClick","isOpen","title","subTitle","headerButtonText","submitText","submit","alert","onHeaderButtonClick","onClose","submitButtonDisabled","isLoading","direction","isChecked","name","label","placeholder","value","onChange","e","target","maxLength","marginBottom","autoFocus","required","useError","validate","type","isMDXComponent"],"mappings":"qlBAcO,IAAMA,EAAe,Q,8OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAiBF,QAAQ,UACpC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,4pFAAyrFC,SAAO,GACjuFN,QACAH,kBACAU,eACAC,UACAL,oBACAM,cACAC,eACAC,UACAC,cACAC,aACAC,mBAXiuF,gBAYjuFjB,IAZiuF,EAajuFH,eAbiuF,GAchuFO,QAAQ,eACZ,WAAM,MAC6Bc,YAAe,GAAtCC,EADN,KACeC,EADf,OAE6BF,YAAe,GAAtCG,EAFN,KAEeC,EAFf,OAGuCJ,YAAe,GAAhDK,EAHN,aAI6BL,WAAe,IAAtCM,EAJN,KAIeC,EAJf,KAMKC,EAAW,SAAAC,GAAE,OAAIF,EAAWE,IANjC,EAQiCT,WAAe,IAA1CU,EARN,KAQiBC,EARjB,KAeD,OAAO,YAAC,IAAD,CAAWzB,QAAQ,aAC1B,YAAC,IAAD,CAAY0B,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMb,GAAW,IAAOhB,QAAQ,cAArF,oBAGA,YAAC,IAAD,CAAY0B,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMX,GAAW,IAAOlB,QAAQ,cAArF,oBAGA,YAAC,IAAD,CAAiB8B,OAAQf,EAASgB,MAAM,YAAYC,SAAS,sBAAsBC,iBAAiB,SAASC,WAAW,KAAKC,OAAQ,kBAXnIC,MAAM,cACNpB,GAAW,IAU8IqB,oBAAqB,WAC5KD,MAAM,iBACLE,QAAS,kBAAMtB,GAAW,IAAQuB,qBAAsBpB,EAAcqB,UAAWrB,EAAcnB,QAAQ,mBAC1G,YAAC,IAAD,CAAeyC,UAAU,MAAMzC,QAAQ,iBACrC,mDACA,YAAC,IAAD,CAAO0C,UAAuB,IAAZtB,EAAeS,QAAS,kBAAMP,EAAS,IAAItB,QAAQ,UACrE,+BACA,YAAC,IAAD,CAAO0C,UAAuB,IAAZtB,EAAeS,QAAS,kBAAMP,EAAS,IAAItB,QAAQ,UACrE,iCAGJ,YAAC,IAAD,CAAiB8B,OAAQb,EAASc,MAAM,YAAYC,SAAS,uDAAuDM,QAAS,kBAAMpB,GAAW,IAAQqB,qBAAsBpB,EAAcqB,UAAWrB,EAAcnB,QAAQ,mBACzN,YAAC,IAAD,CAAeyC,UAAU,MAAMzC,QAAQ,iBACrC,YAAC,IAAD,CAAW2C,KAAK,YAAYC,MAAM,MAAMC,YAAY,cAAcC,MAAOtB,EAAWuB,SAAU,SAAAC,GAAC,OAAIvB,EAAauB,EAAEC,OAAOH,QAAQI,UAAW,IAAKC,aAAc,GAAIC,WAAS,EAACC,UAAQ,EAACC,UAAQ,EAACC,SAAU,SAAAZ,GACrM,IAAKA,EAAM,MAAO,eACjB3C,QAAQ,eAEf,YAAC,IAAD,CAAeyC,UAAU,MAAMzC,QAAQ,iBACrC,YAAC,IAAD,CAAU4C,MAAO,OAAQY,KAAK,OAAOb,KAAK,UAAUO,UAAW,KAAML,YAAa,0BAA2BQ,UAAQ,EAACrD,QAAQ,yB,4OAU1IH,EAAW4D,gBAAiB","file":"component---docs-src-components-modal-mobile-full-modal-mobile-full-modal-mdx-5e191b9cf53ab5c4abd8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MobileFullModal } from './MobileFullModal';\nimport { Container } from '../../Container/Container';\nimport { BaseButton } from '../../Button/BaseButton/BaseButton';\nimport { Radio } from '../../Control/Radio/Radio';\nimport { BaseInput } from '../../Input/BaseInput/BaseInput';\nimport { Textarea } from '../../Input/Textarea/Textarea';\nimport { DoczContainer } from 'remember-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"mobilefullmodal\"\n    }}>{`MobileFullModal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MobileFullModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen1, setIsOpen1] = React.useState(false)\\n  const [isOpen2, setIsOpen2] = React.useState(false)\\n  const [isProcessing, setIsProcessing] = React.useState(false)\\n  const [radioId, setRadioId] = React.useState(1)\\n  const setRadio = id => setRadioId(id)\\n  const [buyerName, setBuyerName] = React.useState(\\'\\')\\n  const handleSubmit = () => {\\n    alert(\\'보냈습니다\\')\\n    setIsOpen1(false)\\n  }\\n  return (\\n    <Container>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen1(true)}\\n      >\\n        Open Full Modal1\\n      </BaseButton>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen2(true)}\\n      >\\n        Open Full Modal2\\n      </BaseButton>\\n      <MobileFullModal\\n        isOpen={isOpen1}\\n        title=\\\"채용 포지션 저장\\\"\\n        subTitle=\\\"Donald. Patrick Sr.\\\"\\n        headerButtonText=\\\"포지션 추가\\\"\\n        submitText=\\\"저장\\\"\\n        submit={() => handleSubmit()}\\n        onHeaderButtonClick={() => {\\n          alert(\\'포지션 추가 버튼 클릭\\')\\n        }}\\n        onClose={() => setIsOpen1(false)}\\n        submitButtonDisabled={isProcessing}\\n        isLoading={isProcessing}\\n      >\\n        <DoczContainer direction=\\\"row\\\">\\n          <div>Radio onClick Event Bind</div>\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </DoczContainer>\\n      </MobileFullModal>\\n      <MobileFullModal\\n        isOpen={isOpen2}\\n        title=\\\"채용 포지션 저장\\\"\\n        subTitle=\\\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\\\"\\n        onClose={() => setIsOpen2(false)}\\n        submitButtonDisabled={isProcessing}\\n        isLoading={isProcessing}\\n      >\\n        <DoczContainer direction=\\\"row\\\">\\n          <BaseInput\\n            name=\\\"buyerName\\\"\\n            label=\\\"구매자\\\"\\n            placeholder=\\\"구매자명을 입력하세요\\\"\\n            value={buyerName}\\n            onChange={e => setBuyerName(e.target.value)}\\n            maxLength={150}\\n            marginBottom={10}\\n            autoFocus\\n            required\\n            useError\\n            validate={name => {\\n              if (!name) return \\'구매자명을 입력하세요\\'\\n            }}\\n          />\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Textarea\\n            label={\\'문의내용\\'}\\n            type=\\\"text\\\"\\n            name=\\\"message\\\"\\n            maxLength={1500}\\n            placeholder={\\'1500자 내로 문의 내용을 적어 주세요.\\'}\\n            required\\n          />\\n        </DoczContainer>\\n      </MobileFullModal>\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MobileFullModal,\n      Container,\n      BaseButton,\n      Radio,\n      BaseInput,\n      Textarea,\n      DoczContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen1, setIsOpen1] = React.useState(false);\n        const [isOpen2, setIsOpen2] = React.useState(false);\n        const [isProcessing, setIsProcessing] = React.useState(false);\n        const [radioId, setRadioId] = React.useState(1);\n\n        const setRadio = id => setRadioId(id);\n\n        const [buyerName, setBuyerName] = React.useState('');\n\n        const handleSubmit = () => {\n          alert('보냈습니다');\n          setIsOpen1(false);\n        };\n\n        return <Container mdxType=\"Container\">\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen1(true)} mdxType=\"BaseButton\">\n          Open Full Modal1\n        </BaseButton>\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen2(true)} mdxType=\"BaseButton\">\n          Open Full Modal2\n        </BaseButton>\n        <MobileFullModal isOpen={isOpen1} title=\"채용 포지션 저장\" subTitle=\"Donald. Patrick Sr.\" headerButtonText=\"포지션 추가\" submitText=\"저장\" submit={() => handleSubmit()} onHeaderButtonClick={() => {\n            alert('포지션 추가 버튼 클릭');\n          }} onClose={() => setIsOpen1(false)} submitButtonDisabled={isProcessing} isLoading={isProcessing} mdxType=\"MobileFullModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <div>Radio onClick Event Bind</div>\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" />\n            <span>옵션1</span>\n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" />\n            <span>옵션2</span>\n          </DoczContainer>\n        </MobileFullModal>\n        <MobileFullModal isOpen={isOpen2} title=\"채용 포지션 저장\" subTitle=\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\" onClose={() => setIsOpen2(false)} submitButtonDisabled={isProcessing} isLoading={isProcessing} mdxType=\"MobileFullModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <BaseInput name=\"buyerName\" label=\"구매자\" placeholder=\"구매자명을 입력하세요\" value={buyerName} onChange={e => setBuyerName(e.target.value)} maxLength={150} marginBottom={10} autoFocus required useError validate={name => {\n                if (!name) return '구매자명을 입력하세요';\n              }} mdxType=\"BaseInput\" />\n          </DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Textarea label={'문의내용'} type=\"text\" name=\"message\" maxLength={1500} placeholder={'1500자 내로 문의 내용을 적어 주세요.'} required mdxType=\"Textarea\" />\n          </DoczContainer>\n        </MobileFullModal>\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}