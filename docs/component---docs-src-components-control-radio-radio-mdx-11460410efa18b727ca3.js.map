{"version":3,"sources":["webpack:///../docsSrc/components/Control/Radio/Radio.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Radio","__position","__code","__scope","Playground","Props","DoczContainer","React","radioId","setRadioId","setRadio","id","direction","isChecked","onClick","isMDXComponent"],"mappings":"yhBASO,IAAMA,EAAe,Q,4NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAOF,QAAQ,UAC1B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,01BAAu2BC,SAAO,GAC/4BN,QACAH,kBACAU,eACAC,UACAL,UACAM,mBAN+4B,gBAO/4BZ,IAP+4B,EAQ/4BH,eAR+4B,GAS94BO,QAAQ,eACZ,WAAM,MAC6BS,WAAe,GAAtCC,EADN,KACeC,EADf,KAGKC,EAAW,SAAAC,GAAE,OAAIF,EAAWE,IAElC,OAAO,4BACP,YAAC,IAAD,CAAeC,UAAU,SAASd,QAAQ,iBACxC,YAAC,IAAD,CAAec,UAAU,MAAMd,QAAQ,iBAAvC,0BACA,YAAC,IAAD,CAAec,UAAU,MAAMd,QAAQ,iBACrC,YAAC,IAAD,CAAOe,WAAS,EAACf,QAAQ,UACzB,YAAC,IAAD,CAAOA,QAAQ,YAInB,YAAC,IAAD,CAAec,UAAU,SAASd,QAAQ,iBACxC,YAAC,IAAD,CAAec,UAAU,MAAMd,QAAQ,iBAAvC,uCACA,YAAC,IAAD,CAAec,UAAU,MAAMd,QAAQ,iBACrC,YAAC,IAAD,CAAOe,UAAuB,IAAZL,EAAeM,QAAS,kBAAMJ,EAAS,IAAIZ,QAAQ,UAAU,+BAC/E,YAAC,IAAD,CAAOe,UAAuB,IAAZL,EAAeM,QAAS,kBAAMJ,EAAS,IAAIZ,QAAQ,UAAU,2C,0NAU3FH,EAAWoB,gBAAiB","file":"component---docs-src-components-control-radio-radio-mdx-11460410efa18b727ca3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/hanjiseop/Dev/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Radio } from './Radio';\nimport { DoczContainer } from 'remember-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Radio} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [radioId, setRadioId] = React.useState(1)\\n  const setRadio = id => setRadioId(id)\\n  return (\\n    <>\\n      <DoczContainer direction=\\\"column\\\">\\n        <DoczContainer direction=\\\"row\\\">Radio on/off( Static )</DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Radio isChecked />\\n          <Radio />\\n        </DoczContainer>\\n      </DoczContainer>\\n\\n      <DoczContainer direction=\\\"column\\\">\\n        <DoczContainer direction=\\\"row\\\">\\n          Radio onClick Event Bind( Dynamic )\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </DoczContainer>\\n      </DoczContainer>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Radio,\n      DoczContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [radioId, setRadioId] = React.useState(1);\n\n        const setRadio = id => setRadioId(id);\n\n        return <>\n        <DoczContainer direction=\"column\" mdxType=\"DoczContainer\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">Radio on/off( Static )</DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Radio isChecked mdxType=\"Radio\" />\n            <Radio mdxType=\"Radio\" />\n          </DoczContainer>\n        </DoczContainer>\n        \n        <DoczContainer direction=\"column\" mdxType=\"DoczContainer\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">Radio onClick Event Bind( Dynamic )</DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" /><span>옵션1</span> \n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" /><span>옵션2</span>\n          </DoczContainer>\n        </DoczContainer>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}