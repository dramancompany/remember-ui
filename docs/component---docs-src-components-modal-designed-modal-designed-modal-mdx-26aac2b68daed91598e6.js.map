{"version":3,"sources":["webpack:///../docsSrc/components/Modal/DesignedModal/DesignedModal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","DesignedModal","__position","__code","__scope","Playground","Props","Container","BaseButton","Radio","BaseInput","Textarea","DoczContainer","React","isOpen1","setIsOpen1","isOpen2","setIsOpen2","isProcessing","radioId","setRadioId","setRadio","id","buyerName","setBuyerName","handleSubmit","alert","fill","width","size","onClick","isOpen","isDraggable","isDragBounded","title","subTitle","submitText","closeText","submit","onClose","close","submitButtonDisabled","isLoading","direction","isChecked","mobileWidth","mobileHeight","name","label","placeholder","value","onChange","e","target","maxLength","marginBottom","autoFocus","required","useError","validate","type","isMDXComponent"],"mappings":"ulBAcO,IAAMA,EAAe,Q,0OAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAeF,QAAQ,UAClC,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,80FAA62FC,SAAO,GACr5FN,QACAH,kBACAU,eACAC,UACAL,kBACAM,cACAC,eACAC,UACAC,cACAC,aACAC,mBAXq5F,gBAYr5FjB,IAZq5F,EAar5FH,eAbq5F,GAcp5FO,QAAQ,eACZ,WAAM,MAC6Bc,YAAe,GAAtCC,EADN,KACeC,EADf,OAE6BF,YAAe,GAAtCG,EAFN,KAEeC,EAFf,OAGuCJ,YAAe,GAAhDK,EAHN,aAI6BL,WAAe,IAAtCM,EAJN,KAIeC,EAJf,KAMKC,EAAW,SAAAC,GAAE,OAAIF,EAAWE,IANjC,EAQiCT,WAAe,IAA1CU,EARN,KAQiBC,EARjB,KAUKC,EAAe,WACnBC,MAAM,UAGR,OAAO,YAAC,IAAD,CAAW3B,QAAQ,aAC1B,YAAC,IAAD,CAAY4B,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMf,GAAW,IAAOhB,QAAQ,cAArF,wBAGA,YAAC,IAAD,CAAY4B,MAAI,EAACC,MAAO,IAAKC,KAAM,QAASC,QAAS,kBAAMb,GAAW,IAAOlB,QAAQ,cAArF,wBAGA,YAAC,IAAD,CAAegC,OAAQjB,EAASkB,aAAa,EAAMC,eAAe,EAAMC,MAAK,KAAQC,SAAU,WAAYC,WAAW,KAAKC,UAAU,KAAKC,OAAQ,kBAAMb,KAAgBc,QAAS,kBAAMxB,GAAW,IAAQyB,MAAO,kBAAMzB,GAAW,IAAQ0B,qBAAsBvB,EAAcwB,UAAWxB,EAAcnB,QAAQ,iBAC7S,YAAC,IAAD,CAAe4C,UAAU,MAAM5C,QAAQ,iBACrC,oDAEF,YAAC,IAAD,CAAe4C,UAAU,MAAM5C,QAAQ,iBACrC,YAAC,IAAD,CAAO6C,UAAuB,IAAZzB,EAAeW,QAAS,kBAAMT,EAAS,IAAItB,QAAQ,UACrE,+BACA,YAAC,IAAD,CAAO6C,UAAuB,IAAZzB,EAAeW,QAAS,kBAAMT,EAAS,IAAItB,QAAQ,UACrE,iCAGJ,YAAC,IAAD,CAAegC,OAAQf,EAASkB,MAAK,KAAQC,SAAU,WAAYC,WAAW,KAAKC,UAAU,KAAKC,OAAQ,kBAAMb,KAAgBc,QAAS,kBAAMtB,GAAW,IAAQuB,MAAO,kBAAMvB,GAAW,IAAQwB,qBAAsBvB,EAAcwB,UAAWxB,EAAc2B,YAAY,QAAQC,aAAa,QAAQ/C,QAAQ,iBAC9S,YAAC,IAAD,CAAe4C,UAAU,MAAM5C,QAAQ,iBACrC,YAAC,IAAD,CAAWgD,KAAK,YAAYC,MAAM,MAAMC,YAAY,cAAcC,MAAO3B,EAAW4B,SAAU,SAAAC,GAAC,OAAI5B,EAAa4B,EAAEC,OAAOH,QAAQI,UAAW,IAAKC,aAAc,GAAIC,WAAS,EAACC,UAAQ,EAACC,UAAQ,EAACC,SAAU,SAAAZ,GACrM,IAAKA,EAAM,MAAO,eACjBhD,QAAQ,eAEf,YAAC,IAAD,CAAe4C,UAAU,MAAM5C,QAAQ,iBACrC,YAAC,IAAD,CAAUiD,MAAO,OAAQY,KAAK,OAAOb,KAAK,UAAUO,UAAW,KAAML,YAAa,0BAA2BQ,UAAQ,EAAC1D,QAAQ,yB,wOAU1IH,EAAWiE,gBAAiB","file":"component---docs-src-components-modal-designed-modal-designed-modal-mdx-26aac2b68daed91598e6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jisukyoon/remember-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { DesignedModal } from './DesignedModal';\nimport { Container } from '../../Container/Container';\nimport { BaseButton } from '../../Button/BaseButton/BaseButton';\nimport { Radio } from '../../Control/Radio/Radio';\nimport { BaseInput } from '../../Input/BaseInput/BaseInput';\nimport { Textarea } from '../../Input/Textarea/Textarea';\nimport { DoczContainer } from 'remember-ui';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"designedmodal\"\n    }}>{`DesignedModal`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={DesignedModal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [isOpen1, setIsOpen1] = React.useState(false)\\n  const [isOpen2, setIsOpen2] = React.useState(false)\\n  const [isProcessing, setIsProcessing] = React.useState(false)\\n  const [radioId, setRadioId] = React.useState(1)\\n  const setRadio = id => setRadioId(id)\\n  const [buyerName, setBuyerName] = React.useState(\\'\\')\\n  const handleSubmit = () => {\\n    alert(\\'보냈습니다\\')\\n  }\\n  return (\\n    <Container>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen1(true)}\\n      >\\n        Open Designed Modal1\\n      </BaseButton>\\n      <BaseButton\\n        fill\\n        width={250}\\n        size={\\'large\\'}\\n        onClick={() => setIsOpen2(true)}\\n      >\\n        Open Designed Modal2\\n      </BaseButton>\\n      <DesignedModal\\n        isOpen={isOpen1}\\n        isDraggable={true}\\n        isDragBounded={true}\\n        title={`구매`}\\n        subTitle={\\'이용권 구매하기\\'}\\n        submitText=\\\"확인\\\"\\n        closeText=\\\"취소\\\"\\n        submit={() => handleSubmit()}\\n        onClose={() => setIsOpen1(false)}\\n        close={() => setIsOpen1(false)}\\n        submitButtonDisabled={isProcessing}\\n        isLoading={isProcessing}\\n      >\\n        <DoczContainer direction=\\\"row\\\">\\n          <div>Radio onClick Event Bind</div>\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} />\\n          <span>옵션1</span>\\n          <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} />\\n          <span>옵션2</span>\\n        </DoczContainer>\\n      </DesignedModal>\\n      <DesignedModal\\n        isOpen={isOpen2}\\n        title={`구매`}\\n        subTitle={\\'이용권 구매하기\\'}\\n        submitText=\\\"확인\\\"\\n        closeText=\\\"취소\\\"\\n        submit={() => handleSubmit()}\\n        onClose={() => setIsOpen2(false)}\\n        close={() => setIsOpen2(false)}\\n        submitButtonDisabled={isProcessing}\\n        isLoading={isProcessing}\\n        mobileWidth=\\\"100vw\\\"\\n        mobileHeight=\\\"100vh\\\"\\n      >\\n        <DoczContainer direction=\\\"row\\\">\\n          <BaseInput\\n            name=\\\"buyerName\\\"\\n            label=\\\"구매자\\\"\\n            placeholder=\\\"구매자명을 입력하세요\\\"\\n            value={buyerName}\\n            onChange={e => setBuyerName(e.target.value)}\\n            maxLength={150}\\n            marginBottom={10}\\n            autoFocus\\n            required\\n            useError\\n            validate={name => {\\n              if (!name) return \\'구매자명을 입력하세요\\'\\n            }}\\n          />\\n        </DoczContainer>\\n        <DoczContainer direction=\\\"row\\\">\\n          <Textarea\\n            label={\\'문의내용\\'}\\n            type=\\\"text\\\"\\n            name=\\\"message\\\"\\n            maxLength={1500}\\n            placeholder={\\'1500자 내로 문의 내용을 적어 주세요.\\'}\\n            required\\n          />\\n        </DoczContainer>\\n      </DesignedModal>\\n    </Container>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      DesignedModal,\n      Container,\n      BaseButton,\n      Radio,\n      BaseInput,\n      Textarea,\n      DoczContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [isOpen1, setIsOpen1] = React.useState(false);\n        const [isOpen2, setIsOpen2] = React.useState(false);\n        const [isProcessing, setIsProcessing] = React.useState(false);\n        const [radioId, setRadioId] = React.useState(1);\n\n        const setRadio = id => setRadioId(id);\n\n        const [buyerName, setBuyerName] = React.useState('');\n\n        const handleSubmit = () => {\n          alert('보냈습니다');\n        };\n\n        return <Container mdxType=\"Container\">\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen1(true)} mdxType=\"BaseButton\">\n          Open Designed Modal1\n        </BaseButton>\n        <BaseButton fill width={250} size={'large'} onClick={() => setIsOpen2(true)} mdxType=\"BaseButton\">\n          Open Designed Modal2\n        </BaseButton>\n        <DesignedModal isOpen={isOpen1} isDraggable={true} isDragBounded={true} title={`구매`} subTitle={'이용권 구매하기'} submitText=\"확인\" closeText=\"취소\" submit={() => handleSubmit()} onClose={() => setIsOpen1(false)} close={() => setIsOpen1(false)} submitButtonDisabled={isProcessing} isLoading={isProcessing} mdxType=\"DesignedModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <div>Radio onClick Event Bind</div>\n          </DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Radio isChecked={radioId === 1} onClick={() => setRadio(1)} mdxType=\"Radio\" />\n            <span>옵션1</span>\n            <Radio isChecked={radioId === 2} onClick={() => setRadio(2)} mdxType=\"Radio\" />\n            <span>옵션2</span>\n          </DoczContainer>\n        </DesignedModal>\n        <DesignedModal isOpen={isOpen2} title={`구매`} subTitle={'이용권 구매하기'} submitText=\"확인\" closeText=\"취소\" submit={() => handleSubmit()} onClose={() => setIsOpen2(false)} close={() => setIsOpen2(false)} submitButtonDisabled={isProcessing} isLoading={isProcessing} mobileWidth=\"100vw\" mobileHeight=\"100vh\" mdxType=\"DesignedModal\">\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <BaseInput name=\"buyerName\" label=\"구매자\" placeholder=\"구매자명을 입력하세요\" value={buyerName} onChange={e => setBuyerName(e.target.value)} maxLength={150} marginBottom={10} autoFocus required useError validate={name => {\n                if (!name) return '구매자명을 입력하세요';\n              }} mdxType=\"BaseInput\" />\n          </DoczContainer>\n          <DoczContainer direction=\"row\" mdxType=\"DoczContainer\">\n            <Textarea label={'문의내용'} type=\"text\" name=\"message\" maxLength={1500} placeholder={'1500자 내로 문의 내용을 적어 주세요.'} required mdxType=\"Textarea\" />\n          </DoczContainer>\n        </DesignedModal>\n      </Container>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}